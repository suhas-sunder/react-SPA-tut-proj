{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop Files\\\\Web Dev Projects and Learning\\\\1 My Projects\\\\github\\\\react-SPA-tut-proj\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport EventsPage from \"./pages/Events\";\nimport HomePage from \"./pages/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this)\n}, {\n  path: \"/events\",\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 31\n  }, this)\n}, {\n  path: \"/events/\",\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 32\n  }, this)\n}, {\n  path: \"/edit-event\",\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 35\n  }, this)\n}, {\n  path: \"/new-event\",\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 34\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEventPage","NewEventPage","EventDetailPage","EventsPage","HomePage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","App","_c","$RefreshReg$"],"sources":["E:/Desktop Files/Web Dev Projects and Learning/1 My Projects/github/react-SPA-tut-proj/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\r\n\r\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\r\n//    - HomePage\r\n//    - EventsPage\r\n//    - EventDetailPage\r\n//    - NewEventPage\r\n//    - EditEventPage\r\n// 2. Add routing & route definitions for these five pages\r\n//    - / => HomePage\r\n//    - /events => EventsPage\r\n//    - /events/<some-id> => EventDetailPage\r\n//    - /events/new => NewEventPage\r\n//    - /events/<some-id>/edit => EditEventPage\r\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\r\n// 4. Add properly working links to the MainNavigation\r\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\r\n// 6. Output a list of dummy events to the EventsPage\r\n//    Every list item should include a link to the respective EventDetailPage\r\n// 7. Output the ID of the selected event on the EventDetailPage\r\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\r\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\r\nimport EditEventPage from \"./pages/EditEvent\";\r\nimport NewEventPage from \"./pages/NewEvent\";\r\nimport EventDetailPage from \"./pages/EventDetail\";\r\nimport EventsPage from \"./pages/Events\";\r\nimport HomePage from \"./pages/Home\";\r\n\r\nconst router = createBrowserRouter([\r\n  { path: \"/\", element: <HomePage /> },\r\n  { path: \"/events\", element: <EventsPage /> },\r\n  { path: \"/events/\", element: <EventDetailPage /> },\r\n  { path: \"/edit-event\", element: <EditEventPage /> },\r\n  { path: \"/new-event\", element: <NewEventPage /> },\r\n]);\r\n\r\nfunction App() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,QAAQ,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CACjC;EAAES,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACF,QAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAI,CAAC,EACpC;EAAEL,IAAI,EAAE,SAAS;EAAEC,OAAO,eAAEH,OAAA,CAACH,UAAU;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAI,CAAC,EAC5C;EAAEL,IAAI,EAAE,UAAU;EAAEC,OAAO,eAAEH,OAAA,CAACJ,eAAe;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAI,CAAC,EAClD;EAAEL,IAAI,EAAE,aAAa;EAAEC,OAAO,eAAEH,OAAA,CAACN,aAAa;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAI,CAAC,EACnD;EAAEL,IAAI,EAAE,YAAY;EAAEC,OAAO,eAAEH,OAAA,CAACL,YAAY;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAI,CAAC,CAClD,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOR,OAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAW;AACpB;AAACE,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}